<<<<<<< HEAD
Voicoding을 사용하시려면 몇 가지 주의사항이 있습니다.

먼저, 모든 선언 혹은 사용에는 조금의 텀을 주시고 말씀해주세요.
영어를 사용하게 되는 부분에는 자신이 영어 원어민이 된 것처럼 말씀해주세요.

Baisc Func usage에는 Python의 내장함수인 input, split, print, len, sum, min, max 그리고 수식에 대한 사용법이 적혀 있습니다. 이 중, input과 split, 그리고 수식을 제외한 나머지 함수를 사용할 때에는 Assertion Parameters를 참고해 사용해주셔야 합니다. 

Assertion Variables에는 변수 선언의 사용법이 적혀있습니다. 변수 선언을 하는 방식에는 문자, 숫자, 리스트, 함수의 방법이 있습니다.

Loop statements에는 반복문(for, while)의 사용법이 적혀있습니다. 타겟 변수를 말씀하실 때에는 Assertion Parameters를 참고해 사용해주세요.

IF statements에는 조건문(if, elif, else)의 사용법이 적혀있습니다. 조건문의 조건식을 사용하시는 방법은 Bool logic 을 참고해 사용해주세요.

User Define Func usage에는 사용자 정의 함수, def에 대한 사용법이 적혀있습니다. 함수에 사용되는 파라미터를 선언하실 때에는 Assertion Parameters를 참고해주세요.

Assertion Parameters에는 함수 혹은 문장에서 변수가 호출될 때 쓰이는 Parameter의 사용법이 적혀있습니다.

Bool logic에는 부울 논리식, 조건문의 조건식을 사용하는 방법이 적혀있습니다.
=======
'기본 함수 사용',
        '인풋', -> input()
        '프린트', -> print(
        '섬', -> sum(
        '맥스', -> max(
        '민' -> min(
        '렌' -> len(
        '수식' -> +, -, *, /, 몫, 나머지
        => 뒤에 나오는걸 parameter로 넣어야 함

'변수 선언' -> 문자, 숫자, 리스트, 함수
        는 -> =
        첫번째 - -> =
        리스트 -> c는 빈 리스트-> c = []
                  c는 숫자 리스트 1 2 3 4 5 6 -> c = [1, 2, 3, 4, 5, 6]
                  c는 문자 리스트 a b c d -> c = ['a', 'b', 'c', 'd']

'반복문 선언'
        for a in range -> for a in range(
        for i in (li):
        while -> while(

'조건문 선언'
        if -> if(
        else if -> elif(
        else -> else:

'함수 선언'
        aaa -> def aaa(

'완료' -> tab 빼기

'파라미터 선언'
        a b c -> a, b, c):

'논리 식 선언'
        1: A는 B 와 같다 -> A == B):
        2: A는 B 보다 크다 -> A > B):
        5: A는 B 보다 크거나 같다 -> A >= B):
        6: A는 B 보다 작거나 같다 -> A <= B):
        7: A는 B 보다 작다 -> A < B):
>>>>>>> 3dd0aeb23785c3d1a5c29366c9ec84a89109e9a4
